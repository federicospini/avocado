// cli options
// -c caller port
// -p peer port
// -s contract address
// -f storage location
// -w web3 provider

import minimist from 'minimist'
import path from 'path'
import request from 'request'
import p from 'es6-promisify'
import Web3 from 'web3'
import Contract from 'truffle-contract'
import fs from 'fs'
import solc from 'solc'

const PUDDING_PATH = path.resolve(__dirname + '/../pudding/')

const argv = minimist(process.argv.slice(2))
const peerPort = argv.c || 4020
const callerPort = argv.p || 3020
const contractAddress = argv.s || '0xd3bd9b5a203b74350f52f71bd17181d94d6eb2c2' // '0x5d078d6d4407d927169719706e644a064e67362f'
const abi = [{"constant":false,"inputs":[{"name":"channelId","type":"bytes32"},{"name":"sequenceNumber","type":"uint256"},{"name":"state","type":"bytes"},{"name":"signature0","type":"bytes"},{"name":"signature1","type":"bytes"}],"name":"updateState","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"hash","type":"bytes32"},{"name":"sig","type":"bytes"},{"name":"signer","type":"address"}],"name":"ecverify","outputs":[{"name":"b","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"channelId","type":"bytes32"}],"name":"deleteChannel","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"channelId","type":"bytes32"},{"name":"address0","type":"address"},{"name":"address1","type":"address"},{"name":"state","type":"bytes"},{"name":"challengePeriod","type":"uint256"},{"name":"signature0","type":"bytes"},{"name":"signature1","type":"bytes"}],"name":"newChannel","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"hash","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"ecrecovery","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"channelId","type":"bytes32"}],"name":"tryClose","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"channelId","type":"bytes32"}],"name":"getChannel","outputs":[{"name":"address0","type":"address"},{"name":"address1","type":"address"},{"name":"phase","type":"uint8"},{"name":"challengePeriod","type":"uint256"},{"name":"closingBlock","type":"uint256"},{"name":"state","type":"bytes"},{"name":"sequenceNumber","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"channelId","type":"bytes32"},{"name":"signature","type":"bytes"},{"name":"signer","type":"address"}],"name":"startChallengePeriod","outputs":[],"payable":false,"type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"name":"message","type":"string"}],"name":"Error","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"channelId","type":"bytes32"},{"indexed":false,"name":"address0","type":"address"},{"indexed":false,"name":"address1","type":"address"},{"indexed":false,"name":"phase","type":"uint8"},{"indexed":false,"name":"challengePeriod","type":"uint256"},{"indexed":false,"name":"closingBlock","type":"uint256"},{"indexed":false,"name":"state","type":"bytes"},{"indexed":false,"name":"sequenceNumber","type":"uint256"}],"name":"LogAcceptedChannel","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"channelId","type":"bytes32"},{"indexed":false,"name":"address0","type":"address"},{"indexed":false,"name":"address1","type":"address"},{"indexed":false,"name":"phase","type":"uint8"},{"indexed":false,"name":"challengePeriod","type":"uint256"},{"indexed":false,"name":"closingBlock","type":"uint256"},{"indexed":false,"name":"state","type":"bytes"},{"indexed":false,"name":"sequenceNumber","type":"uint256"}],"name":"LogAcceptedUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"channelId","type":"bytes32"},{"indexed":false,"name":"address0","type":"address"},{"indexed":false,"name":"address1","type":"address"},{"indexed":false,"name":"phase","type":"uint8"},{"indexed":false,"name":"challengePeriod","type":"uint256"},{"indexed":false,"name":"closingBlock","type":"uint256"},{"indexed":false,"name":"state","type":"bytes"},{"indexed":false,"name":"sequenceNumber","type":"uint256"}],"name":"LogDeletedChannel","type":"event"}]
const bytecode = ''
const storageLocation = argv.f || path.join(__dirname, '../data/storage')
const web3Provider = argv.w || 'http://localhost:8545'


;(async () => {
  // MAKE WEB3
  const web3 = new Web3()
  const provider = new Web3.providers.HttpProvider(web3Provider)
  web3.setProvider(provider)
  const accounts = await p(web3.eth.getAccounts)()
  web3.eth.defaultAccount = accounts[0]

  // // INSTANTIATE PUDDING CONTRACT ABSTRACTION
  // const StateChannels = require(PUDDING_PATH + '/StateChannels.sol.js')
  // StateChannels.setProvider(new Web3.providers.HttpProvider(web3Provider))
  // const contract = await StateChannels.new()
  // var input = {
    // 'ECVerify.sol': fs.readFileSync('./contracts/ECVerify.sol').toString(),
    // 'StateChannels.sol': fs.readFileSync('./contracts/StateChannels.sol').toString()
    // 'StateChannels2.sol': fs.readFileSync('./contracts/StateChannels2.sol').toString()
  // }

  // var output = solc.compile(fs.readFileSync('./contracts/StateChannels2.sol').toString(), 1)
  // if (output.errors) { throw new Error(output.errors) }

  var StateChannels = Contract({
    abi: abi,
    address: contractAddress,
    network_id: 3,
    networks: [3],
    binary: bytecode
  })
  // var StateChannels = Contract(abi)
  StateChannels.setProvider(provider)
  StateChannels.setDefaultAccount(accounts[0])
  // await StateChannels.detectNetwork()

  // var contract = await StateChannels.new()
  var contract = await StateChannels.deployed()
  console.log(`contract address: ${contract.address}, network: ${StateChannels.hasNetwork(3)}`)

  var JSONStorage = require('node-localstorage').JSONStorage
  var storage = new JSONStorage(storageLocation)

  const post = p(function (url, body, callback) {
    request.post({
      url,
      body,
      json: true,
    }, callback)
  })

  var globals = {
    storage,
    contract,
    web3,
    post
  }

  var caller = require('./servers/caller.js').default(globals)
  var peer = require('./servers/peer.js').default(globals)

  peer.listen(peerPort, () => console.log('peer api listening on ' + peerPort))
  caller.listen(callerPort, () => console.log('caller api listening on ' + callerPort))
})().catch(err => console.error(err))

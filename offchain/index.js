// cli options
// -na caller port
// -nb peer port
// -sa storage location nodeA
// -sb storage location nodeB
// -w web3 provider
// -aa nodeA ETH account address
// -ab nodeB ETH account address

import minimist from 'minimist'
import path from 'path'
import request from 'request'
import p from 'es6-promisify'
import Web3 from 'web3'
import Contract from 'truffle-contract'
import fs from 'fs'
import solc from 'solc'

const argv = minimist(process.argv.slice(2))

const web3Provider = argv.w || 'http://localhost:8545'
const contractAddress = '0xfbe6bab122e739352ad0ff07a0a4496fb2feb1b3'
const abi = [{"constant":false,"inputs":[{"name":"channelId","type":"bytes32"},{"name":"sequenceNumber","type":"uint256"},{"name":"state","type":"bytes"},{"name":"signature0","type":"bytes"},{"name":"signature1","type":"bytes"}],"name":"updateState","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"hash","type":"bytes32"},{"name":"sig","type":"bytes"},{"name":"signer","type":"address"}],"name":"ecverify","outputs":[{"name":"b","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"channelId","type":"bytes32"}],"name":"deleteChannel","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"channelId","type":"bytes32"},{"name":"address0","type":"address"},{"name":"address1","type":"address"},{"name":"state","type":"bytes"},{"name":"challengePeriod","type":"uint256"},{"name":"signature0","type":"bytes"},{"name":"signature1","type":"bytes"}],"name":"newChannel","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[{"name":"hash","type":"bytes32"},{"name":"sig","type":"bytes"}],"name":"ecrecovery","outputs":[{"name":"","type":"address"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"channelId","type":"bytes32"}],"name":"tryClose","outputs":[],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"inputChannelId","type":"bytes32"}],"name":"getChannel","outputs":[{"name":"channelId","type":"bytes32"},{"name":"address0","type":"address"},{"name":"address1","type":"address"},{"name":"phase","type":"uint8"},{"name":"challengePeriod","type":"uint256"},{"name":"closingBlock","type":"uint256"},{"name":"state","type":"bytes"},{"name":"sequenceNumber","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"channelId","type":"bytes32"},{"name":"signature","type":"bytes"},{"name":"signer","type":"address"}],"name":"startChallengePeriod","outputs":[],"payable":false,"type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"name":"message","type":"string"}],"name":"Error","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"channelId","type":"bytes32"},{"indexed":false,"name":"address0","type":"address"},{"indexed":false,"name":"address1","type":"address"},{"indexed":false,"name":"phase","type":"uint8"},{"indexed":false,"name":"challengePeriod","type":"uint256"},{"indexed":false,"name":"closingBlock","type":"uint256"},{"indexed":false,"name":"state","type":"bytes"},{"indexed":false,"name":"sequenceNumber","type":"uint256"}],"name":"LogAcceptedChannel","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"channelId","type":"bytes32"},{"indexed":false,"name":"address0","type":"address"},{"indexed":false,"name":"address1","type":"address"},{"indexed":false,"name":"phase","type":"uint8"},{"indexed":false,"name":"challengePeriod","type":"uint256"},{"indexed":false,"name":"closingBlock","type":"uint256"},{"indexed":false,"name":"state","type":"bytes"},{"indexed":false,"name":"sequenceNumber","type":"uint256"}],"name":"LogAcceptedUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"channelId","type":"bytes32"},{"indexed":false,"name":"address0","type":"address"},{"indexed":false,"name":"address1","type":"address"},{"indexed":false,"name":"phase","type":"uint8"},{"indexed":false,"name":"challengePeriod","type":"uint256"},{"indexed":false,"name":"closingBlock","type":"uint256"},{"indexed":false,"name":"state","type":"bytes"},{"indexed":false,"name":"sequenceNumber","type":"uint256"}],"name":"LogDeletedChannel","type":"event"}]
const bytecode = ''

const storageLocationNodeA = argv.sa || path.join(__dirname, '../data/storage/nodeA')
const storageLocationNodeB = argv.sb || path.join(__dirname, '../data/storage/nodeB')

const portNodeA = argv.na || 4021
const portNodeB = argv.nb || 4022

const addressNodeA = argv.aa || '0x0077cdf65cAD0b5ca9C2af69CD6743f396f616F0' // ALICE
const addressNodeB = argv.ab || '0x00798eaa5c12FD38ff58aD51c985D805C02eB429' // BOB

;(async () => {
  // MAKE WEB3
  const web3 = new Web3()
  const provider = new Web3.providers.HttpProvider(web3Provider)
  web3.setProvider(provider)
  const accounts = await p(web3.eth.getAccounts)()
  web3.eth.defaultAccount = accounts[0]

  var StateChannels = Contract({
    abi: abi,
    address: contractAddress,
    network_id: 3,
    networks: [3],
    binary: bytecode
  })
  StateChannels.setProvider(provider)
  StateChannels.setDefaultAccount(accounts[0]) // TODO DOVREBBE ESSERE L'ACCOUNT definito nel nodo
  var contract = await StateChannels.deployed()
  // console.log(`contract address: ${contract.address}, network: ${StateChannels.hasNetwork(3)}`)

  var JSONStorage = require('node-localstorage').JSONStorage
  var storageNodeA = new JSONStorage(storageLocationNodeA)
  var storageNodeB = new JSONStorage(storageLocationNodeB)

  const post = p(function (url, body, callback) {
    request.post({
      url,
      body,
      json: true,
    }, callback)
  })

  var globalsNodeA = {
    name: 'Node A',
    storage: storageNodeA,
    address: addressNodeA,
    url: 'http://localhost/' + portNodeA,
    contract,
    web3,
    post
  }

  var globalsNodeB = {
    name: 'Node B',
    storage: storageNodeB,
    address: addressNodeB,
    url: 'http://localhost/' + portNodeB,
    contract,
    web3,
    post
  }

  var node = require('./servers/node.js')
  var nodeA = node.default(globalsNodeA)
  var nodeB = node.default(globalsNodeB)

  nodeA.listen(portNodeA, () => console.log('nodeA listening on ' + portNodeA))
  nodeB.listen(portNodeB, () => console.log('nodeB listening on ' + portNodeB))

})().catch(err => console.error(err))
